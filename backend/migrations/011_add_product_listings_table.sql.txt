-- Migration: Create Product Listings Table
-- This script creates the table to store manually entered product listings.

CREATE TABLE IF NOT EXISTS product_listings (
    id SERIAL PRIMARY KEY,
    asin VARCHAR(50) NOT NULL UNIQUE,
    sku VARCHAR(100) NOT NULL,
    title TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Add a trigger to automatically update the updated_at timestamp on any change.
-- First, ensure the function exists (it might have been created by other migrations).
CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Then, create the trigger for this specific table.
DROP TRIGGER IF EXISTS set_timestamp_on_product_listings ON product_listings;
CREATE TRIGGER set_timestamp_on_product_listings
BEFORE UPDATE ON product_listings
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();


-- Add indexes for faster lookups.
CREATE INDEX IF NOT EXISTS idx_pl_asin ON product_listings(asin);
CREATE INDEX IF NOT EXISTS idx_pl_sku ON product_listings(sku);

-- =============================================================================
-- Grant Permissions to Application User
-- =============================================================================
-- IMPORTANT: Replace 'yourdbuser' with the actual DB_USER from your .env file.
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE product_listings TO yourdbuser;
GRANT USAGE, SELECT ON SEQUENCE product_listings_id_seq TO yourdbuser;